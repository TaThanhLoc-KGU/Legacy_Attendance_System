package com.tathanhloc.faceattendance.Service;

import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.stereotype.Service;

/**
 * Mail Service for Face Attendance System
 * Handles all email operations with fallback support
 */
@Service
@Slf4j
public class MailService {

    @Autowired(required = false) // Important: required = false
    private JavaMailSender mailSender;

    @Value("${spring.mail.username:noreply@faceattendance.com}")
    private String fromEmail;

    @Value("${app.mail.enabled:false}")
    private boolean mailEnabled;

    /**
     * Send simple email
     */
    public boolean sendSimpleEmail(String to, String subject, String text) {
        if (!mailEnabled || mailSender == null) {
            log.info("üìß MOCK EMAIL - To: {}, Subject: {}, Text: {}", to, subject, text);
            return true; // Return success for development
        }

        try {
            SimpleMailMessage message = new SimpleMailMessage();
            message.setFrom(fromEmail);
            message.setTo(to);
            message.setSubject(subject);
            message.setText(text);

            mailSender.send(message);
            log.info("‚úÖ Email sent successfully to: {}", to);
            return true;

        } catch (Exception e) {
            log.error("‚ùå Failed to send email to: {} - Error: {}", to, e.getMessage());
            return false;
        }
    }

    /**
     * Send verification email
     */
    public boolean sendVerificationEmail(String to, String verificationCode) {
        String subject = "Face Attendance - M√£ x√°c th·ª±c";
        String text = String.format(
                "M√£ x√°c th·ª±c c·ªßa b·∫°n l√†: %s\n\n" +
                        "M√£ n√†y s·∫Ω h·∫øt h·∫°n sau 10 ph√∫t.\n\n" +
                        "H·ªá th·ªëng ƒëi·ªÉm danh khu√¥n m·∫∑t",
                verificationCode
        );

        return sendSimpleEmail(to, subject, text);
    }

    /**
     * Send password reset email - THE MISSING METHOD!
     */
    public boolean sendResetPasswordEmail(String to, String tempPassword) {
        String subject = "Face Attendance - M·∫≠t kh·∫©u t·∫°m th·ªùi";
        String text = String.format(
                "Xin ch√†o,\n\n" +
                        "M·∫≠t kh·∫©u t·∫°m th·ªùi c·ªßa b·∫°n l√†: %s\n\n" +
                        "Vui l√≤ng ƒëƒÉng nh·∫≠p v√† ƒë·ªïi m·∫≠t kh·∫©u ngay sau khi nh·∫≠n ƒë∆∞·ª£c email n√†y.\n\n" +
                        "L∆∞u √Ω: M·∫≠t kh·∫©u t·∫°m th·ªùi n√†y ch·ªâ c√≥ hi·ªáu l·ª±c trong 24 gi·ªù.\n\n" +
                        "N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng li√™n h·ªá qu·∫£n tr·ªã vi√™n.\n\n" +
                        "Tr√¢n tr·ªçng,\n" +
                        "H·ªá th·ªëng ƒëi·ªÉm danh khu√¥n m·∫∑t",
                tempPassword
        );

        return sendSimpleEmail(to, subject, text);
    }

    /**
     * Send password reset token email (alternative method)
     */
    public boolean sendResetPasswordTokenEmail(String to, String resetToken) {
        String subject = "Face Attendance - ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u";
        String resetUrl = "http://localhost:8080/reset-password?token=" + resetToken;

        String text = String.format(
                "Xin ch√†o,\n\n" +
                        "B·∫°n ƒë√£ y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u. Vui l√≤ng click v√†o link b√™n d∆∞·ªõi ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u:\n\n" +
                        "%s\n\n" +
                        "Link n√†y s·∫Ω h·∫øt h·∫°n sau 1 gi·ªù.\n\n" +
                        "N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y.\n\n" +
                        "Tr√¢n tr·ªçng,\n" +
                        "H·ªá th·ªëng ƒëi·ªÉm danh khu√¥n m·∫∑t",
                resetUrl
        );

        return sendSimpleEmail(to, subject, text);
    }

    /**
     * Send welcome email for new users
     */
    public boolean sendWelcomeEmail(String to, String username, String tempPassword) {
        String subject = "Face Attendance - Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi h·ªá th·ªëng";
        String text = String.format(
                "Xin ch√†o,\n\n" +
                        "T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!\n\n" +
                        "Th√¥ng tin ƒëƒÉng nh·∫≠p:\n" +
                        "- T√™n ƒëƒÉng nh·∫≠p: %s\n" +
                        "- M·∫≠t kh·∫©u t·∫°m th·ªùi: %s\n\n" +
                        "Vui l√≤ng ƒëƒÉng nh·∫≠p v√† ƒë·ªïi m·∫≠t kh·∫©u ngay l·∫ßn ƒëƒÉng nh·∫≠p ƒë·∫ßu ti√™n.\n\n" +
                        "Link ƒëƒÉng nh·∫≠p: http://localhost:8080/login\n\n" +
                        "Tr√¢n tr·ªçng,\n" +
                        "H·ªá th·ªëng ƒëi·ªÉm danh khu√¥n m·∫∑t",
                username, tempPassword
        );

        return sendSimpleEmail(to, subject, text);
    }

    /**
     * Send notification email
     */
    public boolean sendNotificationEmail(String to, String title, String message) {
        String subject = "Face Attendance - " + title;
        String text = String.format(
                "%s\n\n" +
                        "Th·ªùi gian: %s\n\n" +
                        "Tr√¢n tr·ªçng,\n" +
                        "H·ªá th·ªëng ƒëi·ªÉm danh khu√¥n m·∫∑t",
                message,
                java.time.LocalDateTime.now().format(
                        java.time.format.DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss")
                )
        );

        return sendSimpleEmail(to, subject, text);
    }

    /**
     * Send attendance report email
     */
    public boolean sendAttendanceReportEmail(String to, String reportData) {
        String subject = "Face Attendance - B√°o c√°o ƒëi·ªÉm danh";
        String text = String.format(
                "Xin ch√†o,\n\n" +
                        "ƒê√≠nh k√®m l√† b√°o c√°o ƒëi·ªÉm danh c·ªßa b·∫°n:\n\n" +
                        "%s\n\n" +
                        "Tr√¢n tr·ªçng,\n" +
                        "H·ªá th·ªëng ƒëi·ªÉm danh khu√¥n m·∫∑t",
                reportData
        );

        return sendSimpleEmail(to, subject, text);
    }

    /**
     * Send system maintenance notification
     */
    public boolean sendMaintenanceNotification(String to, String maintenanceInfo) {
        String subject = "Face Attendance - Th√¥ng b√°o b·∫£o tr√¨ h·ªá th·ªëng";
        String text = String.format(
                "Xin ch√†o,\n\n" +
                        "H·ªá th·ªëng s·∫Ω ƒë∆∞·ª£c b·∫£o tr√¨ theo th√¥ng tin sau:\n\n" +
                        "%s\n\n" +
                        "Ch√∫ng t√¥i xin l·ªói v√¨ s·ª± b·∫•t ti·ªán n√†y.\n\n" +
                        "Tr√¢n tr·ªçng,\n" +
                        "H·ªá th·ªëng ƒëi·ªÉm danh khu√¥n m·∫∑t",
                maintenanceInfo
        );

        return sendSimpleEmail(to, subject, text);
    }

    /**
     * Check if email service is available
     */
    public boolean isEmailEnabled() {
        return mailEnabled && mailSender != null;
    }

    /**
     * Get email service status
     */
    public String getEmailStatus() {
        if (!mailEnabled) {
            return "Email service disabled in configuration";
        }
        if (mailSender == null) {
            return "Email service not configured properly";
        }
        return "Email service ready";
    }

    /**
     * Test email functionality
     */
    public boolean testEmail(String to) {
        return sendSimpleEmail(to,
                "Face Attendance - Test Email",
                "ƒê√¢y l√† email test t·ª´ h·ªá th·ªëng ƒëi·ªÉm danh khu√¥n m·∫∑t. N·∫øu b·∫°n nh·∫≠n ƒë∆∞·ª£c email n√†y, h·ªá th·ªëng email ƒëang ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng.");
    }
}